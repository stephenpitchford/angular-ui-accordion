/*
 * angular-ui-bootstrap
 * http://angular-ui.github.io/bootstrap/

 * Version: 0.13.4 - 2015-09-03
 * License: MIT
 */
angular.module("ui.bootstrap",["ui.bootstrap.tpls","ui.bootstrap.accordion","ui.bootstrap.collapse"]),angular.module("ui.bootstrap.tpls",["template/accordion/accordion-group.html","template/accordion/accordion.html"]),angular.module("ui.bootstrap.accordion",["ui.bootstrap.collapse"]).constant("accordionConfig",{closeOthers:!0}).controller("AccordionController",["$scope","$attrs","accordionConfig",function(n,o,e){this.groups=[],this.closeOthers=function(a){var t=angular.isDefined(o.closeOthers)?n.$eval(o.closeOthers):e.closeOthers;t&&angular.forEach(this.groups,function(n){n!==a&&(n.isOpen=!1)})},this.addGroup=function(n){var o=this;this.groups.push(n),n.$on("$destroy",function(){o.removeGroup(n)})},this.removeGroup=function(n){var o=this.groups.indexOf(n);-1!==o&&this.groups.splice(o,1)}}]).directive("accordion",function(){return{restrict:"EA",controller:"AccordionController",controllerAs:"accordion",transclude:!0,replace:!1,templateUrl:function(n,o){return o.templateUrl||"template/accordion/accordion.html"}}}).directive("accordionGroup",function(){return{require:"^accordion",restrict:"EA",transclude:!0,replace:!0,templateUrl:function(n,o){return o.templateUrl||"template/accordion/accordion-group.html"},scope:{heading:"@",isOpen:"=?",isDisabled:"=?"},controller:function(){this.setHeading=function(n){this.heading=n}},link:function(n,o,e,a){a.addGroup(n),n.openClass=e.openClass||"panel-open",n.panelClass=e.panelClass,n.$watch("isOpen",function(e){o.toggleClass(n.openClass,e),e&&a.closeOthers(n)}),n.toggleOpen=function(o){n.isDisabled||o&&32!==o.which||(n.isOpen=!n.isOpen)}}}}).directive("accordionHeading",function(){return{restrict:"EA",transclude:!0,template:"",replace:!0,require:"^accordionGroup",link:function(n,o,e,a,t){a.setHeading(t(n,angular.noop))}}}).directive("accordionTransclude",function(){return{require:"^accordionGroup",link:function(n,o,e,a){n.$watch(function(){return a[e.accordionTransclude]},function(n){n&&(o.find("span").html(""),o.find("span").append(n))})}}}),angular.module("ui.bootstrap.collapse",[]).directive("collapse",["$animate",function(n){return{link:function(o,e,a){function t(){e.removeClass("collapse").addClass("collapsing").attr("aria-expanded",!0).attr("aria-hidden",!1),n.addClass(e,"in",{to:{height:e[0].scrollHeight+"px"}}).then(i)}function i(){e.removeClass("collapsing"),e.css({height:"auto"})}function r(){return e.hasClass("collapse")||e.hasClass("in")?(e.css({height:e[0].scrollHeight+"px"}).removeClass("collapse").addClass("collapsing").attr("aria-expanded",!1).attr("aria-hidden",!0),void n.removeClass(e,"in",{to:{height:"0"}}).then(c)):c()}function c(){e.css({height:"0"}),e.removeClass("collapsing"),e.addClass("collapse")}o.$watch(a.collapse,function(n){n?r():t()})}}}]),angular.module("template/accordion/accordion-group.html",[]).run(["$templateCache",function(n){n.put("template/accordion/accordion-group.html",'<div class="panel {{panelClass || \'panel-default\'}}">\n  <div class="panel-heading" ng-keypress="toggleOpen($event)">\n    <h4 class="panel-title">\n      <a href tabindex="0" class="accordion-toggle" ng-click="toggleOpen()" accordion-transclude="heading"><span ng-class="{\'text-muted\': isDisabled}">{{heading}}</span></a>\n    </h4>\n  </div>\n  <div class="panel-collapse collapse" collapse="!isOpen">\n	  <div class="panel-body" ng-transclude></div>\n  </div>\n</div>\n')}]),angular.module("template/accordion/accordion.html",[]).run(["$templateCache",function(n){n.put("template/accordion/accordion.html",'<div class="panel-group" ng-transclude></div>')}]);